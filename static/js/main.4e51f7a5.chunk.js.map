{"version":3,"sources":["components/AuthenticatedRoute/AuthenticatedRoute.js","components/AutoDismissAlert/AutoDismissAlert.js","components/Header/Header.js","apiConfig.js","api/auth.js","components/auth/SignUp.js","components/AutoDismissAlert/messages.js","components/auth/SignIn.js","components/auth/SignOut.js","components/auth/ChangePassword.js","components/Meme/posting.js","components/Meme/index.js","components/Meme/index_all.js","components/Meme/show.js","components/Meme/edit.js","components/Meme/home.js","App.js","index.js"],"names":["AuthenticatedRoute","user","Component","component","render","rest","props","to","AutoDismissAlert","handleClose","setState","show","state","timeoutId","this","setTimeout","clearTimeout","variant","heading","message","deleteAlert","id","Alert","dismissible","onClose","className","Heading","React","authenticatedOptions","unauthenticatedOptions","alwaysOptions","Header","Navbar","expand","Brand","style","textDecoration","Toggle","aria-controls","Collapse","Nav","email","apiUrls","apiUrl","window","location","hostname","signIn","credentials","axios","url","method","data","password","SignUp","handleChange","event","target","name","value","onSignUp","preventDefault","msgAlert","setUser","password_confirmation","passwordConfirmation","then","res","updated","catch","error","flicker","fontSize","Form","onSubmit","Group","controlId","Label","Control","required","type","placeholder","onChange","Button","alt","src","width","withRouter","SignIn","onSignIn","SignOut","history","clearUser","headers","Authorization","token","signOut","finally","push","ChangePassword","onChangePassword","passwords","old","oldPassword","new","newPassword","changePassword","PostMeme","useState","selected","setSelected","file","setFile","loading","setLoading","setName","created","setCreated","pathname","FormData","append","upload","label","files","IndexMeme","memesJSX","memes","setMemes","useEffect","uploads","map","meme","Card","Title","_id","Img","Body","Text","author","createdAt","substring","updatedAt","textAlign","display","justifyContent","flexDirection","gap","IndexAllMeme","match","setMeme","deleted","setDeleted","setShow","params","msg","onClick","Modal","onHide","closeButton","Footer","marginLeft","setUpload","setUpdated","Home","App","msgAlerts","filter","uuid","exact","path","appJsx","basename","process","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4e51f7a5.chunk.js","sourcesContent":["import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\n// props will include a `user` object or empty object\n// props will include a `component` as `Component` or a `render`\n// all other props that may be passed in are `..rest`\nconst AuthenticatedRoute = ({\n  user,\n  component: Component,\n  render,\n  ...rest\n}) => {\n  // if props include a `user` object and a `render` then create route with `render`\n  if (user && render) {\n    return <Route {...rest} render={render} />\n\n    // if props include a `user` object but no `render` then create route with `Component`\n    // if props do not include a `user` object then redirect to home\n  } else {\n    return (\n      <Route\n        {...rest}\n        render={(props) =>\n          user ? <Component {...props} /> : <Redirect to='/' />\n        }\n      />\n    )\n  }\n}\n\nexport default AuthenticatedRoute\n","import React from 'react'\nimport Alert from 'react-bootstrap/Alert'\n\nimport './AutoDismissAlert.scss'\n\nclass AutoDismissAlert extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      show: true\n    }\n    this.timeoutId = null\n  }\n\n  componentDidMount () {\n    this.timeoutId = setTimeout(this.handleClose, 5000)\n  }\n\n  componentWillUnmount () {\n    clearTimeout(this.timeoutId)\n  }\n\nhandleClose = () => this.setState({ show: false })\n\nrender () {\n  const { variant, heading, message, deleteAlert, id } = this.props\n\n  // Delete this alert after the fade animation time (300 ms by default)\n  if (!this.state.show) {\n    setTimeout(() => {\n      deleteAlert(id)\n    }, 300)\n  }\n\n  return (\n    <Alert\n      dismissible\n      show={this.state.show}\n      variant={variant}\n      onClose={this.handleClose}>\n      <div className='container'>\n        <Alert.Heading>{heading}</Alert.Heading>\n        <p className='alert-body'>{message}</p>\n      </div>\n    </Alert>\n  )\n}\n}\n\nexport default AutoDismissAlert\n","import React, { Fragment } from 'react'\nimport Nav from 'react-bootstrap/Nav'\nimport Navbar from 'react-bootstrap/Navbar'\nimport { Link, NavLink } from 'react-router-dom'\n\n// import styled from 'styled-components'\n\n// const StyledNavBar = styled(Navbar)`\n// color: red\n// `\nconst authenticatedOptions = (\n  <Fragment>\n    <NavLink to='/create-meme' className='nav-link'>Create Meme</NavLink>\n    <NavLink to='/my-memes' className='nav-link'>My Memes</NavLink>\n    {/* <NavLink to='/home' className='nav-link'>All Meme</NavLink> */}\n    <NavLink to='/change-password' className='nav-link'>Change Password</NavLink>\n    <NavLink to='/sign-out' className='nav-link'>Sign Out</NavLink>\n  </Fragment>\n)\n\nconst unauthenticatedOptions = (\n  <Fragment>\n    <NavLink to='/sign-up' className='nav-link'>Sign Up</NavLink>\n    <NavLink to='/sign-in' className='nav-link'>Sign In</NavLink>\n  </Fragment>\n)\n\nconst alwaysOptions = (\n  <Fragment>\n    <NavLink to='/home' className='nav-link'></NavLink>\n    {/* <NavLink exact to='/' className='nav-link'>Home</NavLink> */}\n  </Fragment>\n)\n\nconst Header = ({ user }) => (\n  <div className='nav'>\n    <Navbar className='nav' expand='md'>\n      <Navbar.Brand>\n        <Link to='/home' className='nav-meme' style={{ textDecoration: 'none' }}>Meme Central</Link>\n      </Navbar.Brand>\n      <Navbar.Toggle aria-controls='basic-navbar-nav' />\n      <Navbar.Collapse id='basic-navbar-nav'>\n        <Nav className='ml-auto'>\n          {user && (\n            <span className='navbar-text mr-2'>NiCe tO mEmE yOu, {user.email}</span>\n          )}\n          {alwaysOptions}\n          {user ? authenticatedOptions : unauthenticatedOptions}\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar>\n  </div>\n)\n\nexport default Header\n","let apiUrl\nconst apiUrls = {\n  production: 'https://gentle-waters-29195.herokuapp.com',\n  development: 'http://localhost:4741'\n}\n\nif (window.location.hostname === 'localhost') {\n  apiUrl = apiUrls.development\n} else {\n  apiUrl = apiUrls.production\n}\n\nexport default apiUrl\n","import apiUrl from '../apiConfig'\nimport axios from 'axios'\n\nexport const signUp = (credentials) => {\n  return axios({\n    method: 'POST',\n    url: apiUrl + '/sign-up/',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password,\n        password_confirmation: credentials.passwordConfirmation\n      }\n    }\n  })\n}\n\nexport const signIn = (credentials) => {\n  return axios({\n    url: apiUrl + '/sign-in/',\n    method: 'POST',\n    data: {\n      credentials: {\n        email: credentials.email,\n        password: credentials.password\n      }\n    }\n  })\n}\n\nexport const signOut = (user) => {\n  return axios({\n    url: apiUrl + '/sign-out/',\n    method: 'DELETE',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    }\n  })\n}\n\nexport const changePassword = (passwords, user) => {\n  return axios({\n    url: apiUrl + '/change-password/',\n    method: 'PATCH',\n    headers: {\n      Authorization: `Bearer ${user.token}`\n    },\n    data: {\n      passwords: {\n        old: passwords.oldPassword,\n        new: passwords.newPassword\n      }\n    }\n  })\n}\n","import React, { Component } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\n\nimport { signUp, signIn } from '../../api/auth'\nimport { signUpSuccess, signUpFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Sparkles from 'react-sparkle'\n\nclass SignUp extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      passwordConfirmation: '',\n      updated: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignUp = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, setUser } = this.props\n\n  signUp(this.state)\n    .then(() => signIn(this.state))\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign Up Success',\n        message: signUpSuccess,\n        variant: 'success'\n      })\n    )\n    .then(() => this.setState({ updated: true }))\n    // .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ email: '', password: '', passwordConfirmation: '' })\n      msgAlert({\n        heading: 'Sign Up Failed with error: ' + error.message,\n        message: signUpFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password, passwordConfirmation } = this.state\n  if (this.state.updated) {\n    return <Redirect to={'/home'} />\n  }\n\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <Sparkles flicker={false} />\n        <h3 style={{ fontSize: '50px' }}>Sign Up</h3>\n        <Form onSubmit={this.onSignUp}>\n          <Form.Group controlId='email'>\n            <Form.Label className='headers'>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label className='headers'>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='passwordConfirmation'>\n            <Form.Label className='headers'>Confirm Password</Form.Label>\n            <Form.Control\n              required\n              name='passwordConfirmation'\n              value={passwordConfirmation}\n              type='password'\n              placeholder='Confirm Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit\n          </Button>\n          <img alt='loading gif' src='https://i.gifer.com/yH.gif' width='150' />\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignUp)\n","export const signUpSuccess = 'Succesfully registered! You\\'ve been signed in as well.'\nexport const signUpFailure = 'Registration failed. Email may be taken, or passwords don\\'t match.'\nexport const signInSuccess = 'Welcome!'\nexport const signInFailure = 'Failed to sign in. Check your email and password and try again.'\nexport const signOutSuccess = 'Come back soon!'\nexport const changePasswordSuccess = 'Password changed successfully!'\nexport const changePasswordFailure = 'Failed to change passwords. Check your old password and try again.'\n","import React, { Component } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\n\nimport { signIn } from '../../api/auth'\nimport { signInSuccess, signInFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport Sparkles from 'react-sparkle'\n\nclass SignIn extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      email: '',\n      password: '',\n      updated: false\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonSignIn = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, setUser } = this.props\n\n  signIn(this.state)\n    .then((res) => setUser(res.data.user))\n    .then(() =>\n      msgAlert({\n        heading: 'Sign In Success',\n        message: signInSuccess,\n        variant: 'success'\n      })\n    )\n    // .then(() => history.push('/'))\n    .then(() => this.setState({ updated: true }))\n    .catch((error) => {\n      this.setState({ email: '', password: '' })\n      msgAlert({\n        heading: 'Sign In Failed with error: ' + error.message,\n        message: signInFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { email, password } = this.state\n  if (this.state.updated) {\n    return <Redirect to={'/home'} />\n  }\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <Sparkles flicker={false} />\n        <h3 style={{ fontSize: '75px' }}>Sign In</h3>\n        <Form onSubmit={this.onSignIn}>\n          <Form.Group controlId='email'>\n            <Form.Label className='headers'>Email address</Form.Label>\n            <Form.Control\n              required\n              type='email'\n              name='email'\n              value={email}\n              placeholder='Enter email'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='password'>\n            <Form.Label className='headers'>Password</Form.Label>\n            <Form.Control\n              required\n              name='password'\n              value={password}\n              type='password'\n              placeholder='Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit\n          </Button>\n          <img alt='loading gif' src='https://i.gifer.com/XHXk.gif' width='150'></img>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(SignIn)\n","import { Component } from 'react'\nimport { withRouter } from 'react-router-dom'\n\nimport { signOut } from '../../api/auth'\nimport { signOutSuccess } from '../AutoDismissAlert/messages'\n\nclass SignOut extends Component {\n  componentDidMount () {\n    const { msgAlert, history, clearUser, user } = this.props\n\n    signOut(user)\n      .finally(() =>\n        msgAlert({\n          heading: 'Signed Out Successfully',\n          message: signOutSuccess,\n          variant: 'success'\n        })\n      )\n      .finally(() => history.push('/'))\n      .finally(() => clearUser())\n  }\n\n  render () {\n    return ''\n  }\n}\n\nexport default withRouter(SignOut)\n","import React, { Component } from 'react'\nimport { Redirect, withRouter } from 'react-router-dom'\n\nimport { changePassword } from '../../api/auth'\nimport { changePasswordSuccess, changePasswordFailure } from '../AutoDismissAlert/messages'\n\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\n\nclass ChangePassword extends Component {\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      oldPassword: '',\n      newPassword: ''\n    }\n  }\n\nhandleChange = (event) =>\n  this.setState({\n    [event.target.name]: event.target.value\n  })\n\nonChangePassword = (event) => {\n  event.preventDefault()\n\n  const { msgAlert, user } = this.props\n\n  changePassword(this.state, user)\n    .then(() =>\n      msgAlert({\n        heading: 'Change Password Success',\n        message: changePasswordSuccess,\n        variant: 'success',\n        updated: false\n      })\n    )\n    .then(() => this.setState({ updated: true }))\n    // .then(() => history.push('/'))\n    .catch((error) => {\n      this.setState({ oldPassword: '', newPassword: '' })\n      msgAlert({\n        heading: 'Change Password Failed with error: ' + error.message,\n        message: changePasswordFailure,\n        variant: 'danger'\n      })\n    })\n}\n\nrender () {\n  const { oldPassword, newPassword } = this.state\n  if (this.state.updated) {\n    return <Redirect to={'/home'} />\n  }\n  return (\n    <div className='row'>\n      <div className='col-sm-10 col-md-8 mx-auto mt-5'>\n        <h3>Change Password</h3>\n        <Form onSubmit={this.onChangePassword}>\n          <Form.Group controlId='oldPassword'>\n            <Form.Label className='headers'>Old password</Form.Label>\n            <Form.Control\n              required\n              name='oldPassword'\n              value={oldPassword}\n              type='password'\n              placeholder='Old Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Form.Group controlId='newPassword'>\n            <Form.Label className='headers'>New Password</Form.Label>\n            <Form.Control\n              required\n              name='newPassword'\n              value={newPassword}\n              type='password'\n              placeholder='New Password'\n              onChange={this.handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n          <img alt='rick rolled' src='https://i.gifer.com/4KS.gif' width='100px'></img>\n        </Form>\n      </div>\n    </div>\n  )\n}\n}\n\nexport default withRouter(ChangePassword)\n","import React, { useState } from 'react'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Redirect } from 'react-router-dom'\nfunction PostMeme ({ user, msgAlert }) {\n  const [selected, setSelected] = useState({})\n  const [file, setFile] = useState(null)\n  const [loading, setLoading] = useState(false)\n  const [name, setName] = useState('')\n  const [created, setCreated] = useState(false)\n\n  const handleSubmit = (event) => {\n    event.preventDefault()\n    setLoading(true)\n    const data = new FormData()\n    data.append('upload', selected)\n    data.append('name', name)\n    axios({\n      url: `${apiUrl}/uploads`,\n      method: 'POST',\n      data,\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n      .then((res) => {\n        setFile(res.data.upload.url)\n      })\n      .then(() => setCreated(true))\n      .then(() =>\n        msgAlert({\n          heading: 'Upload Success',\n          message: 'Nice meme!',\n          variant: 'success'\n        })\n      )\n      .then(() => setLoading(false))\n      .catch((error) => {\n        msgAlert({\n          heading: 'Oops',\n          message: 'Upload fail:' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n\n  const handleChange = (event) => {\n    setSelected(event.target.files[0])\n  }\n\n  const handleName = (event) => {\n    setName(event.target.value)\n  }\n\n  if (created) {\n    return (\n      <Redirect\n        to={{\n          pathname: '/my-memes'\n        }}\n      />\n    )\n  }\n\n  return (\n    <>\n      <div className='App'>\n        {file\n          ? (\n            <>\n              <img className='displayImg' alt='uploaded file' src={file} />\n            </>\n          )\n          : (\n            ''\n          )}\n        {loading\n          ? (\n            <img alt='loading gif' src='https://i.gifer.com/VhdJ.gif' width='500' />\n          )\n          : (\n            ''\n          )}\n        <Form onSubmit={handleSubmit}>\n          <Form.Group controlId='name'>\n            <Form.Label className='headers'>Name</Form.Label>\n            <Form.Control\n              required\n              name='name'\n              value={name}\n              placeholder='The Meme Name'\n              onChange={handleName}\n            />\n          </Form.Group>\n          <Form.Group>\n            <Form.Label className='headers'>Upload your image</Form.Label>\n            <Form.Control\n              id='fileUpload'\n              type='file'\n              label='Upload File Here'\n              onChange={handleChange}\n            />\n          </Form.Group>\n          <Button variant='primary' type='submit'>Submit</Button>\n        </Form>\n      </div>\n    </>\n  )\n}\n\nexport default PostMeme\n","import React, { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\nimport { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nfunction IndexMeme ({ user, msgAlert }) {\n  const [memes, setMemes] = useState([])\n\n  useEffect(() => {\n    axios({\n      url: `${apiUrl}/uploads`,\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n      // pass in, fire request, send me the arrays, filter this list for users =\n      // filter => resource === user id\n      // new array meet conditions\n      // pass that array to map\n    }).then((res) => {\n      setMemes(res.data.uploads)\n    })\n    // .then(() => {\n    //   msgAlert({\n    //     heading: 'Your Memes',\n    //     message: 'Nice collection!',\n    //     variant: 'success'\n    //   })\n    // })\n    // .catch((error) => {\n    //   msgAlert({\n    //     heading: 'Oops',\n    //     message: 'Index error: ' + error.message,\n    //     variant: 'danger'\n    //   })\n    // })\n  }, [])\n\n  let memesJSX\n  if (memes) {\n    memesJSX = memes.map((meme) => {\n      return (\n        <div key={meme._id}>\n          <Card className='memecard' style={{ width: '40rem' }}>\n            <Card.Title className='rainbow'>{meme.name}</Card.Title>\n            <Link to={`/my-memes/${meme._id}`}>\n              <Card.Img variant='top' src={meme.url} />\n            </Link>\n            <Card.Body>\n              <Card.Text>\n                <p>Creator: {meme.author}</p>\n              </Card.Text>\n              <Card.Text>Created: {meme.createdAt.substring(0, 10)}</Card.Text>\n              <Card.Text>Updated: {meme.updatedAt.substring(0, 10)}</Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <>\n      <h3 style={{ textAlign: 'center', fontSize: '80px' }}>MY OWN MEME CENTRAL</h3>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <ul style={{ display: 'flex', flexDirection: 'column-reverse', gap: '50px' }}>\n          {memesJSX}\n        </ul>\n      </div>\n    </>\n  )\n}\nexport default IndexMeme\n","import React, { useState, useEffect } from 'react'\n// import { indexMemes } from '../../api/meme'\n// import { Link } from 'react-router-dom'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\nimport { Card } from 'react-bootstrap'\n// import './App.css'\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n\nfunction IndexAllMeme ({ user }) {\n  //   const [selected, setSelected] = useState({})\n  const [memes, setMemes] = useState([])\n  useEffect(() => {\n    axios({\n      url: `${apiUrl}/uploads/all`,\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n      // pass in, fire request, send me the arrays, filter this list for users =\n      // filter => resource === user id\n      // new array meet conditions\n      // pass that array to map\n    }).then((res) => {\n      setMemes(res.data.uploads)\n    })\n    // .then(() => {\n    //   msgAlert({\n    //     heading: 'Success!',\n    //     message: 'This is everyone\\'s image',\n    //     variant: 'success'\n    //   })\n    // })\n    // .catch((error) => {\n    //   msgAlert({\n    //     heading: 'Oops',\n    //     message: 'Index error: ' + error.message,\n    //     variant: 'danger'\n    //   })\n    // })\n  }, [])\n\n  let memesJSX\n  if (memes) {\n    memesJSX = memes.map((meme) => {\n      return (\n        <div key={meme._id}>\n          <Card className='memecard' style={{ width: '40rem' }}>\n            <Card.Title className='rainbow'>{meme.name}</Card.Title>\n            <Card.Img variant='top' src={meme.url} />\n            <Card.Body>\n              <Card.Text>\n                <p>Creator: {meme.author}</p>\n              </Card.Text>\n              <Card.Text>Created: {meme.createdAt.substring(0, 10)}</Card.Text>\n              <Card.Text>Updated: {meme.updatedAt.substring(0, 10)}</Card.Text>\n            </Card.Body>\n          </Card>\n        </div>\n      )\n    })\n  }\n\n  return (\n    <>\n      <h3 style={{ textAlign: 'center', fontSize: '80px' }}>THE MEME CENTRAL</h3>\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        <ul\n          style={{\n            display: 'flex',\n            flexDirection: 'column-reverse',\n            gap: '50px'\n          }}>\n          {memesJSX}\n        </ul>\n      </div>\n    </>\n  )\n}\nexport default IndexAllMeme\n","\nimport React, { useState, useEffect } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\n\nimport { Redirect, Link, withRouter } from 'react-router-dom'\n\nfunction ShowMeme ({ user, match, msgAlert }) {\n  const [meme, setMeme] = useState(null)\n  const [deleted, setDeleted] = useState(false)\n  const [show, setShow] = useState(false)\n  // const [editToggle, setEditToggle] = useState(false)\n  const handleClose = () => setShow(false)\n  const handleShow = () => setShow(true)\n\n  useEffect(() => {\n    axios({\n      url: `${apiUrl}/uploads/${match.params.id}`,\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n      // pass in, fire request, send me the arrays, filter this list for users =\n      // filter => resource === user id\n      // new array meet conditions\n      // pass that array to map\n    })\n      .then((res) => {\n        setMeme(res.data.upload)\n      })\n  }, [])\n\n  const destroy = () => {\n    axios({\n      url: `${apiUrl}/uploads/${match.params.id}`,\n      method: 'DELETE',\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n      .then(() => setDeleted(true))\n      .then(() => {\n        msgAlert({\n          heading: 'Deleted',\n          message: 'Meme Yeeted',\n          variant: 'success'\n        })\n      })\n      .catch(error => {\n        msgAlert({\n          heading: 'It\\'s not going anywhere!',\n          message: 'Delete error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n  // const onEdit = () => {\n  //   setEditToggle(!editToggle)\n  // }\n  if (!meme) {\n    return <p>Loading...</p>\n  }\n\n  if (deleted) {\n    return (\n      <Redirect\n        to={{ pathname: '/my-memes', state: { msg: 'You successfully deleted your Meme' } }}\n      />\n    )\n  }\n  // if (editToggle === false) {\n  //   return (\n  //     <Redirect to={{ pathname: '/my-memes/' + match.params.id }} />\n  //   )\n  // }\n\n  return (\n    <>\n      <h1>{meme.name}</h1>\n      <img className='displayImg' src={meme.url} />\n      <div style={{ display: 'flex', justifyContent: 'center' }}>\n        {/* <p>Creator: {meme.author}</p>\n      <p>Created: {meme.createdAt.substring(0, 10)}</p>\n      <p>Updated: {meme.updatedAt.substring(0, 10)}</p> */}\n        <Button variant='primary' onClick={handleShow}>Delete Meme</Button>\n\n        <Modal show={show} onHide={handleClose}>\n          <Modal.Header closeButton>\n            <Modal.Title>Delete Post</Modal.Title>\n          </Modal.Header>\n          <Modal.Body>Are you sure you want to delete?</Modal.Body>\n          <Modal.Footer>\n            <Button variant='secondary' onClick={handleClose}>Close</Button>\n            <Button variant='primary' onClick={destroy}>Delete</Button>\n          </Modal.Footer>\n        </Modal>\n\n        <Link to={'/my-memes/' + match.params.id + '/edit'}>\n          <Button className='btn btn-primary' style={{ marginLeft: '5px' }}>Edit Meme</Button>\n        </Link>\n      </div>\n    </>\n  )\n}\n\nexport default withRouter(ShowMeme)\n","\nimport React, { useState, useEffect } from 'react'\n// import { indexMemes } from '../../api/meme'\nimport axios from 'axios'\nimport apiUrl from '../../apiConfig'\nimport Form from 'react-bootstrap/Form'\nimport Button from 'react-bootstrap/Button'\nimport { Redirect, withRouter } from 'react-router-dom'\n// import './App.css'\n// import Form from 'react-bootstrap/Form'\n// import Button from 'react-bootstrap/Button'\n\nfunction EditMeme ({ user, match, msgAlert }) {\n  //   const [selected, setSelected] = useState({})\n  const [upload, setUpload] = useState(null)\n  const [name, setName] = useState('')\n  const [updated, setUpdated] = useState(false)\n\n  useEffect(() => {\n    axios({\n      url: `${apiUrl}/uploads/${match.params.id}`,\n      method: 'GET',\n      headers: {\n        Authorization: `Bearer ${user.token}`,\n        'Content-Type': 'multipart/form-data'\n      }\n    })\n      .then((res) => {\n        setUpload(res.data.upload)\n      })\n  }, [])\n\n  const onSubmit = (event) => {\n    event.preventDefault()\n    axios({\n      url: `${apiUrl}/uploads/${match.params.id}`,\n      method: 'PATCH',\n      data: {\n        upload: {\n          name: name\n        }\n      },\n      headers: {\n        Authorization: `Bearer ${user.token}`\n      }\n    })\n      .then(() => setUpdated(true))\n      .then(() => {\n        msgAlert({\n          heading: 'Update Success',\n          message: 'You got it!',\n          variant: 'success'\n        })\n      })\n      .catch((error) => {\n        msgAlert({\n          heading: 'Oops',\n          message: 'Update error: ' + error.message,\n          variant: 'danger'\n        })\n      })\n  }\n  const handleName = (event) => {\n    setName(event.target.value)\n  }\n  if (!upload) {\n    return <p>Loading...</p>\n  }\n\n  if (updated) {\n    return (\n      <Redirect\n        to={{ pathname: '/my-memes', state: { msg: 'You successfully updated your Meme' } }}\n      />\n    )\n  }\n\n  return (\n    <div>\n      <Form onSubmit={onSubmit}>\n        <Form.Group controlId='name'>\n          <Form.Label className='headers'>Name</Form.Label>\n          <Form.Control\n            required\n            name='name'\n            value={name}\n            placeholder='The Meme Name'\n            onChange={handleName}\n          />\n        </Form.Group>\n        <Button variant='primary' type='submit'> Submit\n        </Button>\n      </Form>\n    </div>\n  )\n}\n\nexport default withRouter(EditMeme)\n","\nimport React from 'react'\nimport Sparkles from 'react-sparkle'\nfunction Home () {\n  return (\n    <>\n      <div style={{ textAlign: 'center' }}>\n        <Sparkles flicker={false} />\n        <h1 id= 'text-animate'className='main-title'>MEME CENTRAL</h1>\n        <h4>Created By</h4>\n        <img alt='loading gif' src='https://i.gifer.com/XqyL.gif' width='50'></img>\n        <p>Ruo Zheng, CJ Lamborn, Cody Sanders, Maura Webber</p>\n        <img\n          className='memeCentralImage'\n          src='https://i.imgur.com/2nAP1jZ.png'></img>\n      </div>\n    </>\n  )\n}\n\nexport default Home\n","/* eslint-disable no-tabs */\nimport React, { Component, Fragment } from 'react'\nimport { Route } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport AuthenticatedRoute from './components/AuthenticatedRoute/AuthenticatedRoute'\nimport AutoDismissAlert from './components/AutoDismissAlert/AutoDismissAlert'\nimport Header from './components/Header/Header'\nimport SignUp from './components/auth/SignUp'\nimport SignIn from './components/auth/SignIn'\nimport SignOut from './components/auth/SignOut'\nimport ChangePassword from './components/auth/ChangePassword'\nimport PostMeme from './components/Meme/posting'\nimport IndexMeme from './components/Meme/index'\nimport IndexAllMeme from './components/Meme/index_all'\nimport ShowMeme from './components/Meme/show'\nimport EditMeme from './components/Meme/edit'\nimport Home from './components/Meme/home'\n\nclass App extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      user: null,\n      msgAlerts: []\n    }\n  }\n\n  setUser = (user) => this.setState({ user })\n\n  clearUser = () => this.setState({ user: null })\n\n  deleteAlert = (id) => {\n    this.setState((state) => {\n      return { msgAlerts: state.msgAlerts.filter((msg) => msg.id !== id) }\n    })\n  }\n\n  msgAlert = ({ heading, message, variant }) => {\n    const id = uuid()\n    this.setState((state) => {\n      return {\n        msgAlerts: [...state.msgAlerts, { heading, message, variant, id }]\n      }\n    })\n  }\n\n  render () {\n    const { msgAlerts, user } = this.state\n\n    return (\n      <Fragment>\n        <Header user={user} />\n        {msgAlerts.map((msgAlert) => (\n          <AutoDismissAlert\n            key={msgAlert.id}\n            heading={msgAlert.heading}\n            variant={msgAlert.variant}\n            message={msgAlert.message}\n            id={msgAlert.id}\n            deleteAlert={this.deleteAlert}\n          />\n        ))}\n        <main className='container'>\n          <Route\n            exact\n            path='/'\n            render={() => (\n              <Home msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-up'\n            render={() => (\n              <SignUp msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <Route\n            path='/sign-in'\n            render={() => (\n              <SignIn msgAlert={this.msgAlert} setUser={this.setUser} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/sign-out'\n            render={() => (\n              <SignOut\n                msgAlert={this.msgAlert}\n                clearUser={this.clearUser}\n                user={user}\n              />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/change-password'\n            render={() => (\n              <ChangePassword msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/create-meme'\n            render={() => (\n              <PostMeme msgAlert={this.msgAlert} user={user} />\n            )}\n          />\n          <AuthenticatedRoute\n            exact\n            user={user}\n            path='/my-memes'\n            render={() => <IndexMeme msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/home'\n            render={() => <IndexAllMeme msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/my-memes/:id'\n            render={() => <ShowMeme msgAlert={this.msgAlert} user={user} />}\n          />\n          <AuthenticatedRoute\n            user={user}\n            path='/my-memes/:id/edit'\n            render={() => <EditMeme msgAlert={this.msgAlert} user={user} />}\n          />\n        </main>\n      </Fragment>\n    )\n  }\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.scss'\n\nimport App from './App'\nimport { BrowserRouter } from 'react-router-dom'\n\nconst appJsx = (\n  <BrowserRouter basename={process.env.PUBLIC_URL}>\n    <App />\n  </BrowserRouter>\n)\n\nReactDOM.render(appJsx, document.getElementById('root'))\n"],"sourceRoot":""}